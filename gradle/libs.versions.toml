[versions]
agp = "8.8.1"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.10.0"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.2.0"
androidx-core-ktx = "1.15.0"
androidx-espresso-core = "3.6.1"
androidx-lifecycle = "2.8.4"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.1"
compose-multiplatform = "1.7.0"
exposedCore = "0.41.1"
gson = "2.11.0"
gsonVersion = "2.11.0"
jbcrypt = "0.4"
junit = "4.13.2"
kotlin = "2.1.0"
kotlinxCoroutinesCore = "1.9.0"
kotlinxCoroutinesCoreVersion = "1.9.0"
kotlinxSerializationJson = "1.7.3"
kotlinxSerializationJsonVersion = "1.5.0"
ktor = "3.0.3"
ktorServerTest = "2.3.9"
ktorClientCore = "3.0.0"
ktorSerializationKotlinxJson = "3.0.3"
ktorServerCore = "3.0.3"
ktorServerNetty = "3.0.3"
logback = "1.5.16"
postgresql = "42.5.0"
firebaseCrashlyticsBuildtools = "3.0.3"
media3CommonKtx = "1.5.1"
ktorServerCors = "2.3.4"

[libraries]
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedCore" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposedCore" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedCore" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorServerNetty" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorServerNetty" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorServerNetty" }
ktor-client-gson = { module = "io.ktor:ktor-client-gson", version.ref = "ktorServerNetty" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktorServerNetty" }
ktor-ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktorServerNetty" }
ktor-ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktorServerNetty" }
ktor-ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktorServerCore" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktorServerCors"}
ktor-ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktorServerNetty" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorSerializationKotlinxJson" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktorServerTest" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
firebase-crashlytics-buildtools = { group = "com.google.firebase", name = "firebase-crashlytics-buildtools", version.ref = "firebaseCrashlyticsBuildtools" }
androidx-media3-common-ktx = { group = "androidx.media3", name = "media3-common-ktx", version.ref = "media3CommonKtx" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}